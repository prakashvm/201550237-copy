#+TITLE: ITWS2 2017 SPRINT IIITH Assignment 1
#+AUTHOR: PRAKASH MUDHOLKAR
#+DATE: [2017-04-06 Thu]
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This contains solution to Assignment 1.

* Problems
  Assignment 1 Problem Set is taken from http://pascal.iiit.ac.in/~itws2/docs/assignments/first-order-functions/index.html#orgf83783f

* Solutions

** Problem 1
*** Question
    Write a function vector-sum which takes a vector v of numbers, and returns the sum of all elements of v.

*** Solution
    
#+NAME: vector_sum
#+BEGIN_SRC racket

(define (vector-sum v) (for/sum ([x v]) (+ x)))
(check-equal? (vector-sum #()) 0 "test 1")
(check-equal? (vector-sum #(1 2 3)) 6 "test 2")
(check-equal? (vector-sum #(-1 2 3)) 4 "test 3")

#+END_SRC


* Tangle

** Sources
#+BEGIN_SRC racket :tangle vector-sum.rkt :eval no :noweb yes
<<vector_sum>>
#+END_SRC
